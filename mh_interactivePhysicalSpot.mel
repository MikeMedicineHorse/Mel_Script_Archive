/**********************************************************************************************
Procedure: mh_interactivePhysicalSpot()
Version: 1.0
Date: 04-01-09
Description: This procedure will create a MR physical spotlight...with interactivity
**********************************************************************************************/

global proc mh_interactivePhysicalSpot()
{
	// get selected objects in case user wants interactive placement
	// light will be framed on objects
	string $selection[] = `ls -sl`;
	
	//create the necessary nodes...
	string $Light = `spotLight -i 1 -ca 45 -rgb 1 1 1 -d 0 -rs 0 -ss 0 `;
	
	//Here I am selecting the shape and then selecting the transform
	//so I can rename it for good form.
	select -r $Light ;
	string $LightTrans[] = `pickWalk -d up`;
	string $medLightTrans = `rename $LightTrans[0] medSpotPhysical` ;
	
	//I'm hacking the return here to rename the node myself
	//since maya doesn't return the correct shape name here for the light
	select $medLightTrans ; 
	string $medLight[] = `pickWalk -d down`;
	
	//string $medLight = ($medLightTrans + "Shape") ; 
	
	//Here I am setting the default attrs to make it pretty
	
	setAttr ($medLight[0] + ".areaLight") 1;
	setAttr ($medLight[0] + ".areaSamplingU") 8;
	setAttr ($medLight[0] + ".areaSamplingV") 8;
	setAttr ($medLight[0] + ".areaLowLevel") 1;
	setAttr ($medLight[0] + ".areaLowSamplingU") 2;
	setAttr ($medLight[0] + ".areaLowSamplingV") 2;
	
	//Below I am creating the MR physical nodes and connecting them
	string $lightTemp = `createNode mib_cie_d -n medLightTemp` ;
	setAttr ($lightTemp + ".intensity") 500;
	
	string $physicalLight = `createNode physical_light -n medPhysicalLight` ;
	
	connectAttr -f ($physicalLight + ".message") ($medLight[0] + ".miLightShader") ;
	connectAttr -f ($lightTemp + ".outValue") ($physicalLight + ".color") ;
	connectAttr -f ($lightTemp + ".outValueA") ($physicalLight + ".colorA") ;
	
	//Below I am selecting the final transform and hooking up
	//some custom attrs for good form
	
	select -r  $medLightTrans ;
	
	addAttr -ln "lightIntensity"  -at double -dv 250 ; 
	setAttr -e-keyable true ($medLightTrans + ".lightIntensity") ;
	connectAttr -f ($medLightTrans + ".lightIntensity") ($lightTemp + ".intensity") ;
	
	addAttr -ln "coneAngle"  -at double  -min 0 -max 180 -dv 45 ;
	setAttr -e-keyable true ($medLightTrans + ".coneAngle") ;
	connectAttr -f ($medLightTrans + ".coneAngle") ($medLight[0] + ".coneAngle") ;
	
	//this code looks through the newly created light and focuses the panel on it
	string $panel = `getPanel -withFocus`;
		if (`getPanel -typeOf $panel` == "modelPanel"){

			select -replace $medLightTrans ;
			lookThroughSelected 0 $panel;
			if (`size $selection`){
				select -replace $selection;
				fitPanel -selected;
			} else {
				fitPanel -all;
			}

		} else {
			warning((uiRes("m_defaultAreaLight.kNotAModelingPanel")));
		}
	

	
}