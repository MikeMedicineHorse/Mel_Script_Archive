/**********************************************************************************************
Procedure: mh_interactiveAreaLight()
Version: 1.0
Date: 05-07-09
Description: This procedure will create an area light with interaction targeted to the
selected object.
**********************************************************************************************/

global proc mh_interactiveAreaLight()
{
	// get selected objects in case user wants interactive placement
	// light will be framed on objects
	string $selection[] = `ls -sl`;
	
	//create the necessary nodes...
	string $areaLight = `shadingNode -asLight areaLight` ;
	string $areaLight = `rename $areaLight medAreaLight_00` ;
	
	//Here I am setting the default attrs to make it pretty
	setAttr ($areaLight + ".intensity") 75;
	setAttr ($areaLight + ".decayRate") 2;
	setAttr ($areaLight + ".useRayTraceShadows") 1;
	setAttr ($areaLight + ".shadowRays") 4;
	setAttr ($areaLight + ".rayDepthLimit") 2;
	setAttr ($areaLight + ".areaLight") 1;
	setAttr ($areaLight + ".areaType") 0;
	setAttr ($areaLight + ".areaHiSamples") 4;
	setAttr ($areaLight + ".areaHiSampleLimit") 2;
	setAttr ($areaLight + ".areaLoSamples") 1;
	
	//Below I am selecting the final transform and hooking up
	//some custom attrs for good form
	
	select -r  $areaLight ;
	
	addAttr -ln "lightIntensity"  -at double -dv 75 ; 
	setAttr -e-keyable true ($areaLight + ".lightIntensity") ;
	connectAttr -f ($areaLight + ".lightIntensity") ($areaLight + ".intensity") ;
	
	//this code looks through the newly created light and focuses the panel on it
	string $panel = `getPanel -withFocus`;
		if (`getPanel -typeOf $panel` == "modelPanel"){

			select -replace $areaLight;
			lookThroughSelected 0 $panel;
			if (`size $selection`){
				select -replace $selection;
				fitPanel -selected;
			} else {
				fitPanel -all;
			}

		} else {
			warning((uiRes("m_defaultAreaLight.kNotAModelingPanel")));
		}
		
}

